name: Build and Deploy WiseCard Backend

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: cardmates/wisecard_backend


jobs:
  build-and-push:
#    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          latest

# 빌드된 이미지 GitHub Container Registry(ghcr.io)에 푸시
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}

    - name: Verify image push
      run: |
        docker login ghcr.io -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }}
        docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
        docker images | grep ${{ env.IMAGE_NAME }}


  deploy:
#    needs: [test, build-and-push]
    needs: [build-and-push]
    runs-on: ubuntu-latest
    # if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-northeast-2

    - name: Setup SSH agent
      uses: webfactory/ssh-agent@v0.9.0
      with:
        ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

    - name: Copy docker-compose.yml to EC2
      run: |
        scp -o StrictHostKeyChecking=no docker-compose.yml ubuntu@${{ secrets.EC2_HOST }}:/home/ubuntu/WiseCard_Backend/docker-compose.yml

    - name: Deploy to EC2
      uses: appleboy/ssh-action@v1.0.0
      env:
        GHCR_PAT: ${{ secrets.GHCR_PAT }}
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ubuntu
        key: ${{ secrets.EC2_SSH_KEY }}
        port: 22
        envs: GHCR_PAT
        script: |
          # EC2 서버에서 실행할 배포 스크립트
          cd /home/ubuntu/WiseCard_Backend
          
          echo "현재 사용자: $(whoami)"
          echo "GHCR_PAT is: $GHCR_PAT"
  
          # Docker 레지스트리 로그인 (PAT은 안전하게 관리)
          echo "$GHCR_PAT" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
                  
          ls -l ~/snap/docker/current/.docker/config.json
          cat ~/snap/docker/current/.docker/config.json
        
          # 환경변수 파일 업데이트
          cat > .env << EOF
          DB_HOST=${{ secrets.DB_HOST }}
          DB_NAME=db-wisecard
          DB_USERNAME=admin
          DB_PASSWORD=${{ secrets.DB_PASSWORD }}
          DB_PORT=3306
          REDIS_HOST=redis-wisecard
          REDIS_PORT=6379
          REDIS_PASSWORD=
          APP_API_KAKAO_KEY=${{ secrets.APP_API_KAKAO_KEY }}
          APP_PORT=8080
          GRPC_PORT=9091
          JWT_SECRET=${{ secrets.JWT_SECRET }}
          EOF
          
          
          # Docker 이미지 풀 및 데몬 시작 
          docker compose down
          docker compose pull || { echo "docker-compose pull failed"; exit 1; }
          docker compose up -d || { echo "docker-compose up failed"; exit 1; }
          

          # docker image prune -f
          
          echo "배포가 성공적으로 완료되었습니다!"
